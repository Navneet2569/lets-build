name: Deploy Infra

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Azure CLI & Bicep
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az bicep install
      - name: Run Bicep Linter
        run: |
          set -e
          echo "Running Bicep Linter..."
          az bicep build --file ./deploy/main.bicep

  validate:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        name: Sign in to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Ensure Resource Group Exists
        run: |
          az group create --name ${{ secrets.AZURE_RG_NAME }} --location "centralindia"
      - uses: azure/arm-deploy@v1
        name: Preflight Validation
        with:
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ secrets.AZURE_RG_NAME }}
          template: ./deploy/main.bicep
          parameters: ./deploy/parameters.prod.json
          deploymentMode: Validate

  preview:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        name: Sign in to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: Azure/cli@v1
        name: Run What-If Preview
        with:
          inlineScript: |
            set -e
            az deployment group what-if \
              --resource-group ${{ secrets.AZURE_RG_NAME }} \
              --template-file ./deploy/main.bicep \
              --parameters ./deploy/parameters.prod.json \
              --verbose

  deploy:
    needs: preview
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Bicep File
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ secrets.AZURE_RG_NAME }}
          template: ./deploy/main.bicep
          parameters: ./deploy/parameters.prod.json
          failOnStdErr: false
      - name: Store Tokens
        run: |
          AZURE_TOKEN=$(az account get-access-token --resource https://management.azure.com --query accessToken -o tsv)
          GRAPH_TOKEN=$(az account get-access-token --resource https://graph.microsoft.com --query accessToken -o tsv)
          echo "AZURE_TOKEN=$AZURE_TOKEN" >> $GITHUB_ENV
          echo "GRAPH_TOKEN=$GRAPH_TOKEN" >> $GITHUB_ENV