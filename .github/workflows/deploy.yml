name: Deploy Storage Account and Check Tokens

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Install Azure CLI & Bicep
      - name: Install Azure CLI & Bicep
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az bicep install

      # Login to Azure using Managed Identity via OIDC
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Ensure Resource Group Exists
      - name: Ensure Resource Group Exists
        run: |
          az group create --name ${{ secrets.AZURE_RG_NAME }} --location "centralindia"

      # Generate a valid Storage Account name
      - name: Generate Storage Account Name
        run: |
          RAND=$(date +%s | sha256sum | head -c 8)
          echo "STORAGE_NAME=st${RAND}" >> $GITHUB_ENV
          echo "Generated Storage Account Name: st${RAND}"

      # Lint Bicep
      - name: Lint Bicep
        run: |
          echo "Running Bicep Linter..."
          az bicep build --file ./deploy/main.bicep

      # Validate Template using CLI
      - name: Validate Template
        run: |
          echo "Validating template..."
          az deployment group validate \
            --resource-group ${{ secrets.AZURE_RG_NAME }} \
            --template-file ./deploy/main.bicep \
            --parameters storageAccountName=${{ env.STORAGE_NAME }} location=centralindia skuName=Standard_LRS kind=StorageV2 \
            --verbose

      # Preview changes (What-If)
      - name: Preview Deployment
        run: |
          echo "Previewing changes..."
          az deployment group what-if \
            --resource-group ${{ secrets.AZURE_RG_NAME }} \
            --template-file ./deploy/main.bicep \
            --parameters storageAccountName=${{ env.STORAGE_NAME }} location=centralindia skuName=Standard_LRS kind=StorageV2 \
            --verbose

      # Deploy Template
      - name: Deploy Storage Account
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ secrets.AZURE_RG_NAME }}
          template: ./deploy/main.bicep
          parameters: storageAccountName=${{ env.STORAGE_NAME }} location=centralindia skuName=Standard_LRS kind=StorageV2
          failOnStdErr: false

      # Store Tokens for Verification
      - name: Get Tokens
        run: |
          AZURE_TOKEN=$(az account get-access-token --resource https://management.azure.com --query accessToken -o tsv)
          GRAPH_TOKEN=$(az account get-access-token --resource https://graph.microsoft.com --query accessToken -o tsv)
          echo "AZURE_TOKEN=$AZURE_TOKEN" >> $GITHUB_ENV
          echo "GRAPH_TOKEN=$GRAPH_TOKEN" >> $GITHUB_ENV
          echo "Azure Token (first 50 chars): ${AZURE_TOKEN:0:50}"
          echo "Graph Token (first 50 chars): ${GRAPH_TOKEN:0:50}"